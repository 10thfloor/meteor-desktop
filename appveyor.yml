build: off

os: unstable

skip_tags: true

environment:
  matrix:
    - nodejs_version: "4.4.0"
      test: "normal"
    - nodejs_version: "4.4.0"
      test: "integration"
    - nodejs_version: "6.9.1"
      test: "integration"
    - nodejs_version: "6.9.1"
      test: "normal"

platform:
  - x86
  - x64

cache:
  - node_modules
  - '%APPDATA%\npm\node_modules'
  - '%APPDATA%\npm-cache'
  - '%USERPROFILE%\.electron'
  - '%LOCALAPPDATA%/Yarn'

install:
 # Download Meteor
  - ps: Install-Product node $env:nodejs_version
  - npm install -g npm@next
  - npm prune
  - npm install
  - ps: if ($env:test -eq "integration") { Start-FileDownload 'https://s3.amazonaws.com/meteor-windows/InstallMeteor.exe' }
  # Install meteor
  - if %test%==integration .\installMeteor.exe /passive
  # Restart
  - ps: if ($env:test -eq "integration") { Start-Sleep -s 5 }
  - ps: if ($env:test -eq "integration") { Restart-Computer -Force }

# Post-install test scripts.
test_script:
  - node --version
  - npm --version
  - if %test%==integration meteor --version
  - if not %test%==integration npm test
  - if %test%==integration npm run prepare-integration-tests
  - if %test%==integration cd C:\Users\appveyor\AppData\Local\.meteor\packages\meteor-tool\1.4.2\mt-os.windows.x86_32\dev_bundle\lib\node_modules\cordova-lib\node_modules\npm\node_modules\request\node_modules\har-validator\node_modules\is-my-json-valid && rmdir /S /Q node_modules && npm install
  - if %test%==integration npm run test-integration

